#version 450
#extension GL_EXT_debug_printf : require

#define LOCAL_SIZE 32
layout (local_size_x = LOCAL_SIZE, local_size_y = LOCAL_SIZE, local_size_z = 1) in;

layout (set = 0, binding = 0) uniform sampler2D srcTexture;
layout (set = 0, binding = 1, r32f) uniform writeonly image2D dstTexture;
layout(set = 0, binding = 2) uniform UBO {
    ivec2 srcSize;
    ivec2 dstSize;
} ubo;

void main()
{
    const ivec2 srcSize = textureSize(srcTexture, 0);
    const ivec2 dstSize = imageSize(dstTexture);
//    const ivec2 srcSize = ubo.srcSize;
//    const ivec2 dstSize = ubo.dstSize;

//    if (gl_GlobalInvocationID.x == 1 && gl_GlobalInvocationID.y == 1) {
//        debugPrintfEXT("%d %d %d %d\n", srcSize.x, srcSize.y, dstSize.x, dstSize.y);
//    }

    const ivec2 dstCoord = ivec2(gl_GlobalInvocationID.xy);
    const vec2 dstUV = vec2(dstCoord) / vec2(dstSize);
    const ivec2 srcCoord = ivec2(dstUV * srcSize);
    const vec2 srcHalfOffsetUV = vec2(srcCoord + 1.0) / vec2(srcSize);

    const vec4 gatheredDepth = textureGather(srcTexture, srcHalfOffsetUV, 0);
    float sum = 0.0;
    sum += gatheredDepth.x > 0.0 ? gatheredDepth.x : 0.0;
    sum += gatheredDepth.y > 0.0 ? gatheredDepth.y : 0.0;
    sum += gatheredDepth.z > 0.0 ? gatheredDepth.z : 0.0;
    sum += gatheredDepth.w > 0.0 ? gatheredDepth.w : 0.0;
    float count = 0.0;
    count += gatheredDepth.x > 0.0 ? 1.0 : 0.0;
    count += gatheredDepth.y > 0.0 ? 1.0 : 0.0;
    count += gatheredDepth.z > 0.0 ? 1.0 : 0.0;
    count += gatheredDepth.w > 0.0 ? 1.0 : 0.0;
    const float averageDepth = count > 0.0 ? sum / count : 0.0;

    imageStore(dstTexture, dstCoord, vec4(averageDepth));
}