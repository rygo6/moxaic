#version 450

#include "global_binding.glsl"
#include "compute_node_binding.glsl"

void main()
{
    ivec2 coord = ivec2(gl_GlobalInvocationID.xy);
    vec2 uv = vec2(float(gl_GlobalInvocationID.x) / float(globalUBO.width), float(gl_GlobalInvocationID.y) / float(globalUBO.height));

    vec4 color = texture(inputColor, uv);
    float depth = texture(inputDepth, uv).r;
    vec3 normal = texture(inputNormal, uv).rgb;
    vec4 gBuffer = texture(inputGBuffer, uv);

    vec3 sRGB = pow(color.rgb, vec3(1.0 / 2.2));
    vec4 sRGBswapped = vec4(sRGB.bgr, color.a);

    imageStore(outputColor, coord, color);
}