#version 450

#define LOCAL_SIZE 8
layout (local_size_x = LOCAL_SIZE, local_size_y = LOCAL_SIZE, local_size_z = 1) in;

struct DepthState {
    float minDepth;
    float maxDepth;
    float nearZ;
    float farZ;
};

layout (set = 0, binding = 0) uniform State {
    DepthState depth;
} state;
layout (set = 0, binding = 1) uniform sampler2D srcDepth;
layout (set = 0, binding = 2) uniform writeonly image2D dstGbuffer;


void main()
{
    ivec2 srcSize = textureSize(srcDepth, 0);
    ivec2 dstSize = imageSize(dstGbuffer);

    ivec2 dstCoord = ivec2(gl_GlobalInvocationID.xy);
    vec2 dstUV = vec2(dstCoord) / vec2(dstSize);

    ivec2 srcCoord = ivec2(dstUV * srcSize);
    vec2 srcHalfOffsetUV = vec2(srcCoord + 1.0) / vec2(srcSize);

    vec4 gatheredDepth = textureGather(srcDepth, srcHalfOffsetUV, 0);

    float count = 0.0f;
    for (int i = 0; i < 4; ++i) count += gatheredDepth[i] > 0.0f ? 1.0f : 0.0f;
    int iCount = int(count);

    float depthSum = 0.0f;
    for (int i = 0; i < 4; ++i) depthSum += gatheredDepth[i];
    float averageDepth = iCount > 0 ? depthSum / count : 0.0f;

    imageStore(dstGbuffer, dstCoord, vec4(averageDepth));

}